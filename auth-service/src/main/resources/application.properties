# spring.application.name=demo

# Server
server.port=8080

# PostgreSQL DB
spring.datasource.url=jdbc:postgresql://db:5432/auth_db
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# OAuth2 for Google
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=profile,email


spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo

# After successful login, call this URL:
spring.security.oauth2.client.client-authentication-method=post
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Important
spring.security.oauth2.client.registration.google.scope=openid,profile,email


# JWT Secret
jwt.secret=JwtSecretKey123456789
# 1 day in ms
jwt.expiration=86400000

